/*
 * Able API
 *
 * SDK for building integrations with Able.
 *
 * API version: 1.20230727053012
 * Contact: support@able.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ablesdk

import (
	"encoding/json"
	"fmt"
)

// V1DocumentContentStatusV1 Status of processing document content.   - COMPLETE: Document processing has been successful.  - ERROR: Document processing was not successful.
type V1DocumentContentStatusV1 string

// List of v1DocumentContentStatusV1
const (
	DOCUMENT_CONTENT_STATUS_UNSPECIFIED V1DocumentContentStatusV1 = "DOCUMENT_CONTENT_STATUS_UNSPECIFIED"
	COMPLETE V1DocumentContentStatusV1 = "COMPLETE"
	ERROR V1DocumentContentStatusV1 = "ERROR"
)

func (v *V1DocumentContentStatusV1) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V1DocumentContentStatusV1(value)
	for _, existing := range []V1DocumentContentStatusV1{ "DOCUMENT_CONTENT_STATUS_UNSPECIFIED", "COMPLETE", "ERROR",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V1DocumentContentStatusV1", value)
}

// Ptr returns reference to v1DocumentContentStatusV1 value
func (v V1DocumentContentStatusV1) Ptr() *V1DocumentContentStatusV1 {
	return &v
}

type NullableV1DocumentContentStatusV1 struct {
	value *V1DocumentContentStatusV1
	isSet bool
}

func (v NullableV1DocumentContentStatusV1) Get() *V1DocumentContentStatusV1 {
	return v.value
}

func (v *NullableV1DocumentContentStatusV1) Set(val *V1DocumentContentStatusV1) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DocumentContentStatusV1) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DocumentContentStatusV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DocumentContentStatusV1(val *V1DocumentContentStatusV1) *NullableV1DocumentContentStatusV1 {
	return &NullableV1DocumentContentStatusV1{value: val, isSet: true}
}

func (v NullableV1DocumentContentStatusV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DocumentContentStatusV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

