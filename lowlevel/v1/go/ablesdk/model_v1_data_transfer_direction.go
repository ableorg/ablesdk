/*
 * Able API
 *
 * SDK for building integrations with Able.
 *
 * API version: 1.20230621235520
 * Contact: support@able.ai
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ablesdk

import (
	"encoding/json"
	"fmt"
)

// V1DataTransferDirection Direction of data transfer.   - TO_ABLE: Data is transfered from an external source to Able.  - TO_EXTERNAL: Data is transfered from Able to an external source.
type V1DataTransferDirection string

// List of v1DataTransferDirection
const (
	DATA_TRANSFER_DIRECTION_UNSPECIFIED V1DataTransferDirection = "DATA_TRANSFER_DIRECTION_UNSPECIFIED"
	TO_ABLE V1DataTransferDirection = "TO_ABLE"
	TO_EXTERNAL V1DataTransferDirection = "TO_EXTERNAL"
)

func (v *V1DataTransferDirection) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V1DataTransferDirection(value)
	for _, existing := range []V1DataTransferDirection{ "DATA_TRANSFER_DIRECTION_UNSPECIFIED", "TO_ABLE", "TO_EXTERNAL",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V1DataTransferDirection", value)
}

// Ptr returns reference to v1DataTransferDirection value
func (v V1DataTransferDirection) Ptr() *V1DataTransferDirection {
	return &v
}

type NullableV1DataTransferDirection struct {
	value *V1DataTransferDirection
	isSet bool
}

func (v NullableV1DataTransferDirection) Get() *V1DataTransferDirection {
	return v.value
}

func (v *NullableV1DataTransferDirection) Set(val *V1DataTransferDirection) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DataTransferDirection) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DataTransferDirection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DataTransferDirection(val *V1DataTransferDirection) *NullableV1DataTransferDirection {
	return &NullableV1DataTransferDirection{value: val, isSet: true}
}

func (v NullableV1DataTransferDirection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DataTransferDirection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

