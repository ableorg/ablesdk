/*
 * Able API
 * SDK for building integrations with Able.
 *
 * The version of the OpenAPI document: 1.20230621235520
 * Contact: support@able.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ableai.api.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.ableai.api.sdk.model.V1DataTransferDirection;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Represents a DocumentVersion that has been acquired for processing.
 */
@ApiModel(description = "Represents a DocumentVersion that has been acquired for processing.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class V1AcquiredDocumentVersion {
  public static final String SERIALIZED_NAME_DOCUMENT_VERSION_ID = "documentVersionId";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_VERSION_ID)
  private String documentVersionId;

  public static final String SERIALIZED_NAME_EXTERNAL_PRIMARY_KEY = "externalPrimaryKey";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_PRIMARY_KEY)
  private String externalPrimaryKey;

  public static final String SERIALIZED_NAME_DIRECTION = "direction";
  @SerializedName(SERIALIZED_NAME_DIRECTION)
  private V1DataTransferDirection direction = V1DataTransferDirection.DATA_TRANSFER_DIRECTION_UNSPECIFIED;

  public static final String SERIALIZED_NAME_UPLOAD_URL = "uploadUrl";
  @SerializedName(SERIALIZED_NAME_UPLOAD_URL)
  private String uploadUrl;

  public static final String SERIALIZED_NAME_RAW_FILE_URL = "rawFileUrl";
  @SerializedName(SERIALIZED_NAME_RAW_FILE_URL)
  private String rawFileUrl;

  public static final String SERIALIZED_NAME_STANDARDIZED_PDF_URL = "standardizedPdfUrl";
  @SerializedName(SERIALIZED_NAME_STANDARDIZED_PDF_URL)
  private String standardizedPdfUrl;

  public static final String SERIALIZED_NAME_CONTENT_URL = "contentUrl";
  @SerializedName(SERIALIZED_NAME_CONTENT_URL)
  private String contentUrl;

  public static final String SERIALIZED_NAME_ACQUIRED_BY = "acquiredBy";
  @SerializedName(SERIALIZED_NAME_ACQUIRED_BY)
  private String acquiredBy;

  public static final String SERIALIZED_NAME_ACQUIRED_TIME = "acquiredTime";
  @SerializedName(SERIALIZED_NAME_ACQUIRED_TIME)
  private OffsetDateTime acquiredTime;

  public static final String SERIALIZED_NAME_ACQUIRED_DURATION = "acquiredDuration";
  @SerializedName(SERIALIZED_NAME_ACQUIRED_DURATION)
  private String acquiredDuration;


  public V1AcquiredDocumentVersion documentVersionId(String documentVersionId) {
    
    this.documentVersionId = documentVersionId;
    return this;
  }

   /**
   * The ID of the document version.
   * @return documentVersionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the document version.")

  public String getDocumentVersionId() {
    return documentVersionId;
  }


  public void setDocumentVersionId(String documentVersionId) {
    this.documentVersionId = documentVersionId;
  }


  public V1AcquiredDocumentVersion externalPrimaryKey(String externalPrimaryKey) {
    
    this.externalPrimaryKey = externalPrimaryKey;
    return this;
  }

   /**
   * The primary key of the document in the external system.
   * @return externalPrimaryKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The primary key of the document in the external system.")

  public String getExternalPrimaryKey() {
    return externalPrimaryKey;
  }


  public void setExternalPrimaryKey(String externalPrimaryKey) {
    this.externalPrimaryKey = externalPrimaryKey;
  }


  public V1AcquiredDocumentVersion direction(V1DataTransferDirection direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1DataTransferDirection getDirection() {
    return direction;
  }


  public void setDirection(V1DataTransferDirection direction) {
    this.direction = direction;
  }


  public V1AcquiredDocumentVersion uploadUrl(String uploadUrl) {
    
    this.uploadUrl = uploadUrl;
    return this;
  }

   /**
   * The upload URL for the document file in GCS.
   * @return uploadUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The upload URL for the document file in GCS.")

  public String getUploadUrl() {
    return uploadUrl;
  }


  public void setUploadUrl(String uploadUrl) {
    this.uploadUrl = uploadUrl;
  }


  public V1AcquiredDocumentVersion rawFileUrl(String rawFileUrl) {
    
    this.rawFileUrl = rawFileUrl;
    return this;
  }

   /**
   * The download URL for the raw document file in GCS.
   * @return rawFileUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The download URL for the raw document file in GCS.")

  public String getRawFileUrl() {
    return rawFileUrl;
  }


  public void setRawFileUrl(String rawFileUrl) {
    this.rawFileUrl = rawFileUrl;
  }


  public V1AcquiredDocumentVersion standardizedPdfUrl(String standardizedPdfUrl) {
    
    this.standardizedPdfUrl = standardizedPdfUrl;
    return this;
  }

   /**
   * The download URL for the standardized PDF file in GCS.
   * @return standardizedPdfUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The download URL for the standardized PDF file in GCS.")

  public String getStandardizedPdfUrl() {
    return standardizedPdfUrl;
  }


  public void setStandardizedPdfUrl(String standardizedPdfUrl) {
    this.standardizedPdfUrl = standardizedPdfUrl;
  }


  public V1AcquiredDocumentVersion contentUrl(String contentUrl) {
    
    this.contentUrl = contentUrl;
    return this;
  }

   /**
   * The download URL for the content file in GCS.
   * @return contentUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The download URL for the content file in GCS.")

  public String getContentUrl() {
    return contentUrl;
  }


  public void setContentUrl(String contentUrl) {
    this.contentUrl = contentUrl;
  }


  public V1AcquiredDocumentVersion acquiredBy(String acquiredBy) {
    
    this.acquiredBy = acquiredBy;
    return this;
  }

   /**
   * The name of the worker that acquired the document version.
   * @return acquiredBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the worker that acquired the document version.")

  public String getAcquiredBy() {
    return acquiredBy;
  }


  public void setAcquiredBy(String acquiredBy) {
    this.acquiredBy = acquiredBy;
  }


  public V1AcquiredDocumentVersion acquiredTime(OffsetDateTime acquiredTime) {
    
    this.acquiredTime = acquiredTime;
    return this;
  }

   /**
   * The timestamp when the document version was acquired.
   * @return acquiredTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The timestamp when the document version was acquired.")

  public OffsetDateTime getAcquiredTime() {
    return acquiredTime;
  }


  public void setAcquiredTime(OffsetDateTime acquiredTime) {
    this.acquiredTime = acquiredTime;
  }


  public V1AcquiredDocumentVersion acquiredDuration(String acquiredDuration) {
    
    this.acquiredDuration = acquiredDuration;
    return this;
  }

   /**
   * The expected amount of time for task execution.
   * @return acquiredDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The expected amount of time for task execution.")

  public String getAcquiredDuration() {
    return acquiredDuration;
  }


  public void setAcquiredDuration(String acquiredDuration) {
    this.acquiredDuration = acquiredDuration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AcquiredDocumentVersion v1AcquiredDocumentVersion = (V1AcquiredDocumentVersion) o;
    return Objects.equals(this.documentVersionId, v1AcquiredDocumentVersion.documentVersionId) &&
        Objects.equals(this.externalPrimaryKey, v1AcquiredDocumentVersion.externalPrimaryKey) &&
        Objects.equals(this.direction, v1AcquiredDocumentVersion.direction) &&
        Objects.equals(this.uploadUrl, v1AcquiredDocumentVersion.uploadUrl) &&
        Objects.equals(this.rawFileUrl, v1AcquiredDocumentVersion.rawFileUrl) &&
        Objects.equals(this.standardizedPdfUrl, v1AcquiredDocumentVersion.standardizedPdfUrl) &&
        Objects.equals(this.contentUrl, v1AcquiredDocumentVersion.contentUrl) &&
        Objects.equals(this.acquiredBy, v1AcquiredDocumentVersion.acquiredBy) &&
        Objects.equals(this.acquiredTime, v1AcquiredDocumentVersion.acquiredTime) &&
        Objects.equals(this.acquiredDuration, v1AcquiredDocumentVersion.acquiredDuration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentVersionId, externalPrimaryKey, direction, uploadUrl, rawFileUrl, standardizedPdfUrl, contentUrl, acquiredBy, acquiredTime, acquiredDuration);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AcquiredDocumentVersion {\n");
    sb.append("    documentVersionId: ").append(toIndentedString(documentVersionId)).append("\n");
    sb.append("    externalPrimaryKey: ").append(toIndentedString(externalPrimaryKey)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    uploadUrl: ").append(toIndentedString(uploadUrl)).append("\n");
    sb.append("    rawFileUrl: ").append(toIndentedString(rawFileUrl)).append("\n");
    sb.append("    standardizedPdfUrl: ").append(toIndentedString(standardizedPdfUrl)).append("\n");
    sb.append("    contentUrl: ").append(toIndentedString(contentUrl)).append("\n");
    sb.append("    acquiredBy: ").append(toIndentedString(acquiredBy)).append("\n");
    sb.append("    acquiredTime: ").append(toIndentedString(acquiredTime)).append("\n");
    sb.append("    acquiredDuration: ").append(toIndentedString(acquiredDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

