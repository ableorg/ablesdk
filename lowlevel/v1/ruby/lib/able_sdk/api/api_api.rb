=begin
#Able API

#SDK for building integrations with Able.

The version of the OpenAPI document: 1.20230615090446
Contact: support@able.ai
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.1

=end

require 'cgi'

module AbleSDK
  class APIApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Creates a new relationship.
    # @param parent [String] The parent tenant resource name where this relationship will be created. Format: tenants/{tenant}
    # @param relationship [V1Relationship] The relationship to create.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :relationship_id The ID to use for the relationship, which will become the final component of the relationship&#39;s resource name.  This value should be a valid XID.  If no ID is specified, an ID will be generated by the server.
    # @return [V1Relationship]
    def a_pi_create_relationship(parent, relationship, opts = {})
      data, _status_code, _headers = a_pi_create_relationship_with_http_info(parent, relationship, opts)
      data
    end

    # Creates a new relationship.
    # @param parent [String] The parent tenant resource name where this relationship will be created. Format: tenants/{tenant}
    # @param relationship [V1Relationship] The relationship to create.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :relationship_id The ID to use for the relationship, which will become the final component of the relationship&#39;s resource name.  This value should be a valid XID.  If no ID is specified, an ID will be generated by the server.
    # @return [Array<(V1Relationship, Integer, Hash)>] V1Relationship data, response status code and response headers
    def a_pi_create_relationship_with_http_info(parent, relationship, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: APIApi.a_pi_create_relationship ...'
      end
      # verify the required parameter 'parent' is set
      if @api_client.config.client_side_validation && parent.nil?
        fail ArgumentError, "Missing the required parameter 'parent' when calling APIApi.a_pi_create_relationship"
      end
      pattern = Regexp.new(/tenants\/[^\/]+/)
      if @api_client.config.client_side_validation && parent !~ pattern
        fail ArgumentError, "invalid value for 'parent' when calling APIApi.a_pi_create_relationship, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'relationship' is set
      if @api_client.config.client_side_validation && relationship.nil?
        fail ArgumentError, "Missing the required parameter 'relationship' when calling APIApi.a_pi_create_relationship"
      end
      # resource path
      local_var_path = '/v1/{parent}/relationships'.sub('{' + 'parent' + '}', CGI.escape(parent.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'relationshipId'] = opts[:'relationship_id'] if !opts[:'relationship_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(relationship)

      # return_type
      return_type = opts[:debug_return_type] || 'V1Relationship'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"APIApi.a_pi_create_relationship",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: APIApi#a_pi_create_relationship\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Creates a new upload.
    # @param parent [String] The parent tenant and realtionship where this upload will be created. Format: tenants/{tenant}/realtionships/{realtionship}
    # @param upload [V1Upload] The upload to create.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :upload_id The ID to use for the upload, which will become the final component of the upload&#39;s resource name.  This value should be a valid XID.  If no ID is specified, an ID will be generated by the server.
    # @return [V1Upload]
    def a_pi_create_upload(parent, upload, opts = {})
      data, _status_code, _headers = a_pi_create_upload_with_http_info(parent, upload, opts)
      data
    end

    # Creates a new upload.
    # @param parent [String] The parent tenant and realtionship where this upload will be created. Format: tenants/{tenant}/realtionships/{realtionship}
    # @param upload [V1Upload] The upload to create.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :upload_id The ID to use for the upload, which will become the final component of the upload&#39;s resource name.  This value should be a valid XID.  If no ID is specified, an ID will be generated by the server.
    # @return [Array<(V1Upload, Integer, Hash)>] V1Upload data, response status code and response headers
    def a_pi_create_upload_with_http_info(parent, upload, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: APIApi.a_pi_create_upload ...'
      end
      # verify the required parameter 'parent' is set
      if @api_client.config.client_side_validation && parent.nil?
        fail ArgumentError, "Missing the required parameter 'parent' when calling APIApi.a_pi_create_upload"
      end
      pattern = Regexp.new(/tenants\/[^\/]+\/relationships\/[^\/]+/)
      if @api_client.config.client_side_validation && parent !~ pattern
        fail ArgumentError, "invalid value for 'parent' when calling APIApi.a_pi_create_upload, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'upload' is set
      if @api_client.config.client_side_validation && upload.nil?
        fail ArgumentError, "Missing the required parameter 'upload' when calling APIApi.a_pi_create_upload"
      end
      # resource path
      local_var_path = '/v1/{parent}/uploads'.sub('{' + 'parent' + '}', CGI.escape(parent.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'uploadId'] = opts[:'upload_id'] if !opts[:'upload_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(upload)

      # return_type
      return_type = opts[:debug_return_type] || 'V1Upload'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"APIApi.a_pi_create_upload",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: APIApi#a_pi_create_upload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Creates an upload session to start uploading a file.
    # @param parent [String] The parent upload to be started. Format: tenants/{tenant}/realtionships/{realtionship}/uploads/{upload}
    # @param body [Object] 
    # @param [Hash] opts the optional parameters
    # @return [V1UploadRef]
    def a_pi_start_upload(parent, body, opts = {})
      data, _status_code, _headers = a_pi_start_upload_with_http_info(parent, body, opts)
      data
    end

    # Creates an upload session to start uploading a file.
    # @param parent [String] The parent upload to be started. Format: tenants/{tenant}/realtionships/{realtionship}/uploads/{upload}
    # @param body [Object] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(V1UploadRef, Integer, Hash)>] V1UploadRef data, response status code and response headers
    def a_pi_start_upload_with_http_info(parent, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: APIApi.a_pi_start_upload ...'
      end
      # verify the required parameter 'parent' is set
      if @api_client.config.client_side_validation && parent.nil?
        fail ArgumentError, "Missing the required parameter 'parent' when calling APIApi.a_pi_start_upload"
      end
      pattern = Regexp.new(/tenants\/[^\/]+\/relationships\/[^\/]+\/uploads/)
      if @api_client.config.client_side_validation && parent !~ pattern
        fail ArgumentError, "invalid value for 'parent' when calling APIApi.a_pi_start_upload, must conform to the pattern #{pattern}."
      end

      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling APIApi.a_pi_start_upload"
      end
      # resource path
      local_var_path = '/v1/{parent}:startUpload'.sub('{' + 'parent' + '}', CGI.escape(parent.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(body)

      # return_type
      return_type = opts[:debug_return_type] || 'V1UploadRef'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"APIApi.a_pi_start_upload",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: APIApi#a_pi_start_upload\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
