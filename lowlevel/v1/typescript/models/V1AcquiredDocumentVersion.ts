/* tslint:disable */
/* eslint-disable */
/**
 * Able API
 * SDK for building integrations with Able.
 *
 * The version of the OpenAPI document: 1.20230621235520
 * Contact: support@able.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1DataTransferDirection,
    V1DataTransferDirectionFromJSON,
    V1DataTransferDirectionFromJSONTyped,
    V1DataTransferDirectionToJSON,
} from './';

/**
 * Represents a DocumentVersion that has been acquired for processing.
 * @export
 * @interface V1AcquiredDocumentVersion
 */
export interface V1AcquiredDocumentVersion {
    /**
     * The ID of the document version.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    documentVersionId?: string;
    /**
     * The primary key of the document in the external system.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    externalPrimaryKey?: string;
    /**
     * 
     * @type {V1DataTransferDirection}
     * @memberof V1AcquiredDocumentVersion
     */
    direction?: V1DataTransferDirection;
    /**
     * The upload URL for the document file in GCS.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    uploadUrl?: string;
    /**
     * The download URL for the raw document file in GCS.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    rawFileUrl?: string;
    /**
     * The download URL for the standardized PDF file in GCS.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    standardizedPdfUrl?: string;
    /**
     * The download URL for the content file in GCS.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    contentUrl?: string;
    /**
     * The name of the worker that acquired the document version.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    acquiredBy?: string;
    /**
     * The timestamp when the document version was acquired.
     * @type {Date}
     * @memberof V1AcquiredDocumentVersion
     */
    acquiredTime?: Date;
    /**
     * The expected amount of time for task execution.
     * @type {string}
     * @memberof V1AcquiredDocumentVersion
     */
    acquiredDuration?: string;
}

export function V1AcquiredDocumentVersionFromJSON(json: any): V1AcquiredDocumentVersion {
    return V1AcquiredDocumentVersionFromJSONTyped(json, false);
}

export function V1AcquiredDocumentVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1AcquiredDocumentVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'documentVersionId': !exists(json, 'documentVersionId') ? undefined : json['documentVersionId'],
        'externalPrimaryKey': !exists(json, 'externalPrimaryKey') ? undefined : json['externalPrimaryKey'],
        'direction': !exists(json, 'direction') ? undefined : V1DataTransferDirectionFromJSON(json['direction']),
        'uploadUrl': !exists(json, 'uploadUrl') ? undefined : json['uploadUrl'],
        'rawFileUrl': !exists(json, 'rawFileUrl') ? undefined : json['rawFileUrl'],
        'standardizedPdfUrl': !exists(json, 'standardizedPdfUrl') ? undefined : json['standardizedPdfUrl'],
        'contentUrl': !exists(json, 'contentUrl') ? undefined : json['contentUrl'],
        'acquiredBy': !exists(json, 'acquiredBy') ? undefined : json['acquiredBy'],
        'acquiredTime': !exists(json, 'acquiredTime') ? undefined : (new Date(json['acquiredTime'])),
        'acquiredDuration': !exists(json, 'acquiredDuration') ? undefined : json['acquiredDuration'],
    };
}

export function V1AcquiredDocumentVersionToJSON(value?: V1AcquiredDocumentVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'documentVersionId': value.documentVersionId,
        'externalPrimaryKey': value.externalPrimaryKey,
        'direction': V1DataTransferDirectionToJSON(value.direction),
        'uploadUrl': value.uploadUrl,
        'rawFileUrl': value.rawFileUrl,
        'standardizedPdfUrl': value.standardizedPdfUrl,
        'contentUrl': value.contentUrl,
        'acquiredBy': value.acquiredBy,
        'acquiredTime': value.acquiredTime === undefined ? undefined : (value.acquiredTime.toISOString()),
        'acquiredDuration': value.acquiredDuration,
    };
}


