/* tslint:disable */
/* eslint-disable */
/**
 * Able API
 * SDK for building integrations with Able.
 *
 * The version of the OpenAPI document: 1.20230621235520
 * Contact: support@able.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1DocumentVersionStatus,
    V1DocumentVersionStatusFromJSON,
    V1DocumentVersionStatusFromJSONTyped,
    V1DocumentVersionStatusToJSON,
} from './';

/**
 * Represents a DocumentVersion that has been completed after processing.
 * @export
 * @interface V1CompletedDocumentVersion
 */
export interface V1CompletedDocumentVersion {
    /**
     * The ID of the document version.
     * @type {string}
     * @memberof V1CompletedDocumentVersion
     */
    documentVersionId?: string;
    /**
     * 
     * @type {V1DocumentVersionStatus}
     * @memberof V1CompletedDocumentVersion
     */
    status?: V1DocumentVersionStatus;
    /**
     * Any error message generated during processing, empty if status is
     * COMPLETE.
     * @type {string}
     * @memberof V1CompletedDocumentVersion
     */
    lastError?: string;
    /**
     * The name of the worker that acquired the document version.
     * @type {string}
     * @memberof V1CompletedDocumentVersion
     */
    acquiredBy?: string;
    /**
     * The timestamp when the document version was acquired.
     * @type {Date}
     * @memberof V1CompletedDocumentVersion
     */
    acquiredTime?: Date;
    /**
     * The name of the worker that completed the document version.
     * @type {string}
     * @memberof V1CompletedDocumentVersion
     */
    completedBy?: string;
    /**
     * The timestamp when the document version was completed.
     * @type {Date}
     * @memberof V1CompletedDocumentVersion
     */
    completedTime?: Date;
}

export function V1CompletedDocumentVersionFromJSON(json: any): V1CompletedDocumentVersion {
    return V1CompletedDocumentVersionFromJSONTyped(json, false);
}

export function V1CompletedDocumentVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1CompletedDocumentVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'documentVersionId': !exists(json, 'documentVersionId') ? undefined : json['documentVersionId'],
        'status': !exists(json, 'status') ? undefined : V1DocumentVersionStatusFromJSON(json['status']),
        'lastError': !exists(json, 'lastError') ? undefined : json['lastError'],
        'acquiredBy': !exists(json, 'acquiredBy') ? undefined : json['acquiredBy'],
        'acquiredTime': !exists(json, 'acquiredTime') ? undefined : (new Date(json['acquiredTime'])),
        'completedBy': !exists(json, 'completedBy') ? undefined : json['completedBy'],
        'completedTime': !exists(json, 'completedTime') ? undefined : (new Date(json['completedTime'])),
    };
}

export function V1CompletedDocumentVersionToJSON(value?: V1CompletedDocumentVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'documentVersionId': value.documentVersionId,
        'status': V1DocumentVersionStatusToJSON(value.status),
        'lastError': value.lastError,
        'acquiredBy': value.acquiredBy,
        'acquiredTime': value.acquiredTime === undefined ? undefined : (value.acquiredTime.toISOString()),
        'completedBy': value.completedBy,
        'completedTime': value.completedTime === undefined ? undefined : (value.completedTime.toISOString()),
    };
}


