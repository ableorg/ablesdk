/*
 * Able API
 *
 * SDK for building integrations with Able.
 *
 * The version of the OpenAPI document: 1.20230621235520
 * Contact: support@able.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Able.Sdk.Api;
using Able.Sdk.Model;
using Able.Sdk.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Able.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing V1AcquiredDocumentVersion
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class V1AcquiredDocumentVersionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for V1AcquiredDocumentVersion
        //private V1AcquiredDocumentVersion instance;

        public V1AcquiredDocumentVersionTests()
        {
            // TODO uncomment below to create an instance of V1AcquiredDocumentVersion
            //instance = new V1AcquiredDocumentVersion();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of V1AcquiredDocumentVersion
        /// </summary>
        [Fact]
        public void V1AcquiredDocumentVersionInstanceTest()
        {
            // TODO uncomment below to test "IsType" V1AcquiredDocumentVersion
            //Assert.IsType<V1AcquiredDocumentVersion>(instance);
        }


        /// <summary>
        /// Test the property 'DocumentVersionId'
        /// </summary>
        [Fact]
        public void DocumentVersionIdTest()
        {
            // TODO unit test for the property 'DocumentVersionId'
        }
        /// <summary>
        /// Test the property 'ExternalPrimaryKey'
        /// </summary>
        [Fact]
        public void ExternalPrimaryKeyTest()
        {
            // TODO unit test for the property 'ExternalPrimaryKey'
        }
        /// <summary>
        /// Test the property 'Direction'
        /// </summary>
        [Fact]
        public void DirectionTest()
        {
            // TODO unit test for the property 'Direction'
        }
        /// <summary>
        /// Test the property 'UploadUrl'
        /// </summary>
        [Fact]
        public void UploadUrlTest()
        {
            // TODO unit test for the property 'UploadUrl'
        }
        /// <summary>
        /// Test the property 'RawFileUrl'
        /// </summary>
        [Fact]
        public void RawFileUrlTest()
        {
            // TODO unit test for the property 'RawFileUrl'
        }
        /// <summary>
        /// Test the property 'StandardizedPdfUrl'
        /// </summary>
        [Fact]
        public void StandardizedPdfUrlTest()
        {
            // TODO unit test for the property 'StandardizedPdfUrl'
        }
        /// <summary>
        /// Test the property 'ContentUrl'
        /// </summary>
        [Fact]
        public void ContentUrlTest()
        {
            // TODO unit test for the property 'ContentUrl'
        }
        /// <summary>
        /// Test the property 'AcquiredBy'
        /// </summary>
        [Fact]
        public void AcquiredByTest()
        {
            // TODO unit test for the property 'AcquiredBy'
        }
        /// <summary>
        /// Test the property 'AcquiredTime'
        /// </summary>
        [Fact]
        public void AcquiredTimeTest()
        {
            // TODO unit test for the property 'AcquiredTime'
        }
        /// <summary>
        /// Test the property 'AcquiredDuration'
        /// </summary>
        [Fact]
        public void AcquiredDurationTest()
        {
            // TODO unit test for the property 'AcquiredDuration'
        }

    }

}
